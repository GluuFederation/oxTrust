<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:richext="http://xmlns.jcp.org/jsf/composite/richext"
	xmlns:ox="http://xmlns.jcp.org/jsf/composite/ox"
	xmlns:p="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:gluufn="http://www.gluu.org/jsf/functions">

	<h:outputStylesheet>
        .addConfig {
            text-align: right;
            white-space: nowrap;
        }

        .removeConfig {
            text-align: left;
            vertical-align: top;
        }
        
        .half{
			width: 50%;
			height: 4px;
			border: 1px solid #999;
			vertical-align: top;
		}
		
		.applianceSheet{
			border: 1px solid #999;
		}
    </h:outputStylesheet>

	<h:outputStylesheet>
            #colorSelector div {
                position: relative;
                width: 36px;
                height: 36px;
                background: url(../img/colorpicker/select2.png);
            }
        </h:outputStylesheet>
	<script type="text/javascript"
		src="#{oxTrustConfigurationService.jsLocation}/colorpicker.js" />
	<script type="text/javascript"
		src="#{oxTrustConfigurationService.jsLocation}/jquery.cluetip.js" />
	<link type="text/css" rel="stylesheet"
		href="#{oxTrustConfigurationService.cssLocation}/colorpicker.css" />


	<h:outputScript>
	
	function loadColorPicker(){
        $('#colorSelector').ColorPicker({
            color: '#{gluufn:getColor(_organization.themeColor, "00ff00")}',
            onSubmit: function(hsb, hex, rgb, el) {
                $(el).val(hex);
                $(el).ColorPickerHide();
            },
            onChange: function (hsb, hex, rgb) {
                $('#colorSelector div').css('backgroundColor', '#' + hex);
                $('input[id*=themeColor]').val(hex);
            }
        });
    }
    
    function addToBodyOnload(oFunction) {
	    var existingOnload = window.onload;
	    if (typeof window.onload != 'function'){
	    	window.onload = oFunction;
	    }else{
	    	window.onload = function () { oFunction(); existingOnload(); }
	    } 
	    
	}

	addToBodyOnload(loadColorPicker);
    </h:outputScript>

	<h:form id="organizationForm">
		<div class="row">
			<div class="col-xs-12">
				<div class="nav-tabs-custom" style="margin-bottom: 0px;">
					<ul class="nav nav-tabs">
						<li class="active"><a href="#sys-config" data-toggle="tab">#{msg['organizationForm.systemConfiguration']}</a></li>
						<li><a href="#smtp-server" data-toggle="tab">#{msg['organizationForm.smtpServerConfiguration']}</a></li>
						<li><a href="#ox-trust" data-toggle="tab">#{msg['organizationForm.oxTrustSettings']}</a></li>
						<li><a href="#ox-auth" data-toggle="tab">#{msg['organizationForm.oxAuthSettings']}</a></li>
					</ul>
					<div class="tab-content">
						<!-- System Configuration -->
						<div class="tab-pane active" id="sys-config">
							<h:panelGroup layout="block" style="width:80%;">

								<ox:decorate
									id="passwordReset" label="#{msg['organizationForm.selfServicePasswordReset']}">
									<h:selectOneMenu value="#{_appliance.passwordResetAllowed}" styleClass="form-control passwordResetSelectBox"
										id="passwordResetId">
										<f:selectItems
											value="#{organizationService.booleanSelectionTypes}"
											var="_type" itemLabel="#{_type.displayName}" />
										<f:converter converterId="org.gluu.jsf2.converter.EnumConverter"/>
									</h:selectOneMenu>
								</ox:decorate>

								<ox:decorate
									id="scimEnabledState" label="#{msg['organizationForm.scimSupport']}">
									<h:selectOneMenu value="#{_appliance.scimEnabled}" styleClass="form-control scimEnableStateSelectBox"
										id="scimEnabledStateId">
										<f:selectItems
											value="#{organizationService.booleanSelectionTypes}"
											var="_type" itemLabel="#{_type.displayName}" />
										<f:converter converterId="org.gluu.jsf2.converter.EnumConverter"/>
									</h:selectOneMenu>
								</ox:decorate>

								<ox:decorate
									id="passportEnabledState" label="#{msg['organizationForm.passportSupport']}">
									<h:selectOneMenu value="#{_appliance.passportEnabled}" styleClass="form-control passportEnableStateSelectBox"
										id="passportEnabledStateId">
										<f:selectItems
											value="#{organizationService.booleanSelectionTypes}"
											var="_type" itemLabel="#{_type.displayName}" />
										<f:converter converterId="org.gluu.jsf2.converter.EnumConverter"/>
									</h:selectOneMenu>
								</ox:decorate>

								<ox:decorate
									id="dnsServer" label="#{msg['organizationForm.dnsServer']} 222">
									<h:inputText styleClass="form-control dnsServerTextBox"
										title="Multiple addresses can be specified using comma (,)"
										value="#{_appliance.applianceDnsServer}" size="100" />
								</ox:decorate>

								<ox:decorate
									id="maxLogSize" label="#{msg['organizationForm.maxLogSize']}">
									<h:inputText value="#{_appliance.maxLogSize}" required="true" styleClass="form-control maxLogSizeTextBox"
										size="10" />
								</ox:decorate>

								<ox:decorate
									id="profileManagment" label="#{msg['organizationForm.userCanEditProfile']}">
									<h:selectOneMenu value="#{_appliance.profileManagment}" styleClass="form-control profileManagmentSelectBox"
										id="profileManagmentStateId">
										<f:selectItems
											value="#{organizationService.booleanSelectionTypes}"
											var="_type" itemLabel="#{_type.displayName}" />
										<f:converter converterId="org.gluu.jsf2.converter.EnumConverter"/>
									</h:selectOneMenu>
								</ox:decorate>

								<ox:decorate label="#{msg['organizationForm.contactEmail']}">
									<h:inputText p:oninvalid="this.setCustomValidity('Please provide a valid email address.')" p:type="email" value="#{_appliance.contactEmail}" styleClass="form-control contactEmailTextBox"/>
								</ox:decorate>

							</h:panelGroup>
						</div>
						<div class="tab-pane" id="smtp-server">
							<h:panelGroup layout="block" style="width:80%;">

								<ox:decorate label="#{msg['organizationForm.smtpHost']}">
									<h:inputText value="#{_smtp.host}" styleClass="form-control smtpHostTextBox"/>
								</ox:decorate>

								<ox:decorate label="#{msg['organizationForm.fromName']}">
									<h:inputText value="#{_smtp.fromName}" styleClass="form-control fromNameTextBox"/>
								</ox:decorate>

								<ox:decorate label="#{msg['organizationForm.fromEmailAddress']}">
									<h:inputText value="#{_smtp.fromEmailAddress}" styleClass="form-control fromEmailAddressTextBox"/>
								</ox:decorate>

								<ox:decorate id="requiresAuthenticationCheckBox" label="#{msg['organizationForm.requiresAuthentication']}">
									<h:selectBooleanCheckbox styleClass="requiresAuthenticationCheckBox form-control"
										value="#{_smtp.requiresAuthentication}" />
								</ox:decorate>

								<ox:decorate label="#{msg['organizationForm.smtpUserName']}">
									<h:inputText value="#{_smtp.userName}" styleClass="form-control smtpUserNameTextBox"/>
								</ox:decorate>

								<ox:decorate label="#{msg['organizationForm.smtpPassword']}">
									<h:inputSecret value="#{_smtp.passwordDecrypted}" styleClass="form-control smtpPasswordTextBox"
										redisplay="true" />
								</ox:decorate>

								<ox:decorate label="#{msg['organizationForm.requiresSSL']}">
									<h:selectBooleanCheckbox value="#{_smtp.requiresSsl}" styleClass="form-control requiresSSLCheckBox"/>
								</ox:decorate>
								
								<ox:decorate label="#{msg['organizationForm.trustserver']}">
									<h:selectBooleanCheckbox value="#{_smtp.serverTrust}" styleClass="form-control trustserverCheckBox"/>
								</ox:decorate>

								<ox:decorate label="#{msg['organizationForm.smtpPort']}">
									<h:inputText value="#{_smtp.port}" styleClass="form-control smtpPortTextBox"/>
								</ox:decorate>
								<h:commandButton value="#{msg['organizationForm.testConfiguration']}" styleClass="btn btn-success verifyButton"
									action="#{updateOrganizationAction.verifySmtpConfiguration}"/>

							</h:panelGroup>
						</div>

						<div class="tab-pane" id="ox-trust">
							<h:panelGroup layout="block" style="overflow-y:auto;overflow-x:hidden;">
								<!-- 
								<ox:decorate id="inum" label="Inum">
									<h:outputText value="#{_organization.inum}" />
								</ox:decorate>

								<ox:decorate
									id="iname" label="Iname">
									<h:outputText value="#{_organization.iname}" />
								</ox:decorate>
 -->

<!-- 								<ox:decorate -->
<!-- 									id="title"> -->
<!-- 									label="Organization Title"> -->
<!-- 									<h:inputText value="#{_organization.title}" size="100" styleClass="form-control"/> -->
<!-- 								</ox:decorate> -->

								<ox:decorate
									id="displayName" label="#{msg['organizationForm.organizationName']}">
									<h:inputText value="#{_organization.displayName}" size="100" styleClass="form-control" style="width:80%;"/>
								</ox:decorate>

<!-- 								<ox:decorate -->
<!-- 									id="shortName"> -->
<!-- 									label="Organization Short name"> -->
<!-- 									<h:inputText value="#{_organization.shortName}" size="100" styleClass="form-control"/> -->
<!-- 								</ox:decorate> -->

<!-- 								<ox:decorate -->
<!-- 									id="description"> -->
<!-- 									label="Description"> -->
<!-- 									<h:inputTextarea value="#{_organization.description}" -->
<!-- 										cols="100" rows="3" /> -->
<!-- 								</ox:decorate> -->

<!-- 								<ox:decorate -->
<!-- 									id="loginPageCustomMessage"> -->
<!-- 									label="Login page message"> -->
<!-- 									<h:inputTextarea -->
<!-- 										value="#{_organizationAction.loginPageCustomMessage}" -->
<!-- 										cols="100" rows="3" /> -->
<!-- 								</ox:decorate> -->

<!-- 								<ox:decorate -->
<!-- 									id="welcomeTitleText"> -->
<!-- 									label="Welcome Title Text"> -->
<!-- 									<h:inputTextarea -->
<!-- 										value="#{_organizationAction.welcomeTitleText}" cols="100" -->
<!-- 										rows="3" /> -->
<!-- 								</ox:decorate> -->

<!-- 								<ox:decorate -->
<!-- 									id="welcomePageCustomMessage"> -->
<!-- 									label="Welcome Page Message"> -->
<!-- 									<h:inputTextarea -->
<!-- 										value="#{_organizationAction.welcomePageCustomMessage}" -->
<!-- 										cols="100" rows="3" /> -->
<!-- 								</ox:decorate> -->
								
								<ui:param name="_managerGroup"
									value="#{gluufn:getDisplayNameEntry(_organization.managerGroup)}" />
								<ox:decorate
									id="managerGroup" label="#{msg['organizationForm.managerGroup']}">
									<h:link includeViewParams="false" outcome="/group/updateGroup"
										value="#{_managerGroup.displayName}">
										<f:param name="inum" value="#{_managerGroup.inum}" />
									</h:link>
								</ox:decorate>

								<ox:decorate label="#{msg['organizationForm.organizationLogo']}">
									<h:panelGroup id="custLogoImagePanelId" columns="1" width="100%"
										border="0" cellpadding="0" cellspacing="0">
										<rich:fileUpload id="custUploadId"
											fileUploadListener="#{_organizationAction.setCustLogoImage}"
											acceptedTypes="jpg, jpeg, gif, png, bmp"
											ontyperejected="alert('Only JPG, GIF, PNG and BMP files are accepted');"
											maxFilesQuantity="1" immediateUpload="true" listHeight="60px"
											styleClass="uploadFile uploadLogo" style="width:80% !important;"
											rendered="#{not _organizationAction.custLogoImageExist}">
											<a4j:ajax event="uploadcomplete" execute="@none"
												render="custLogoImagePanelId" />
										</rich:fileUpload>

										<h:panelGrid columns="1" width="100%" cellspacing="0"
											cellpadding="0" border="0" columnClasses="alignCenter"
											rendered="#{_organization.logoImage ne null}">
											<h:panelGroup layout="block">
												<img
													src="#{request.contextPath}/servlet/logo?preview=true" />
											</h:panelGroup>
											<richext:spacer height="8" />
											<a4j:commandLink value="Remove" styleClass="removeLogo"
												action="#{_organizationAction.removeLogoImage()}"
												render="custLogoImagePanelId"
												eventsQueue="organizationQueue" />
										</h:panelGrid>
									</h:panelGroup>
								</ox:decorate>

								<ox:decorate label="Organization Favicon">
									<h:panelGrid id="custFaviconImagePanelId" columns="1"
										width="100%" border="0" cellpadding="0" cellspacing="0">
										<rich:fileUpload id="custFaviconUploadId"
											fileUploadListener="#{_organizationAction.setFaviconImage}"
											acceptedTypes="ico, jpeg, jpg"
											ontyperejected="alert('Only ICO, JPEG and JPG files are accepted');"
											maxFilesQuantity="1" immediateUpload="true" listHeight="60px"
											styleClass="uploadFile uploadFavicon" style="width:80% !important;"
											rendered="#{not _organizationAction.faviconImageExist}">
											<a4j:ajax event="uploadcomplete" execute="@none"
												render="custFaviconImagePanelId" />
										</rich:fileUpload>

										<h:panelGrid columns="1" width="100%" cellspacing="0"
											cellpadding="0" border="0" columnClasses="alignCenter"
											rendered="#{_organization.faviconImage ne null}">
											<h:panelGroup layout="block">
												<img
													src="#{request.contextPath}/servlet/favicon?preview=true" />
											</h:panelGroup>
											<richext:spacer height="8" />
											<a4j:commandLink value="Remove" styleClass="removeFavicon"
												action="#{_organizationAction.removeFaviconImage()}"
												render="custFaviconImagePanelId" ajaxSingle="true"
												limitRender="true" eventsQueue="organizationQueue" />
										</h:panelGrid>
									</h:panelGrid>
								</ox:decorate>

								<!-- 				<ox:decorate template="/WEB-INF/incl/layout/view.xhtml"> -->
								<!-- 					label="Menu Color"> -->
								<!-- 					<h:panelGrid id="custThemeColorPanelId" columns="1" width="100%" -->
								<!-- 						cellspacing="0" cellpadding="0" border="0" -->
								<!-- 						columnClasses="alignCenter"> -->
								<!-- 						<div id="colorSelector"> -->
								<!-- 						</div> -->
								<!-- 						<h:inputHidden value="#{_organization.themeColor}" id="themeColor" /> -->
								<!-- 						<richext:spacer height="8" /> -->
								<!-- 						<a4j:commandLink value="Remove" -->
								<!-- 							action="#{_organizationAction.removeThemeColor()}" -->
								<!-- 							render="custThemeColorPanelId" limitRender="true" /> -->
								<!-- 					</h:panelGrid> -->
								<!-- 				</ox:decorate> -->

							</h:panelGroup>
						</div>
						
						<div class="tab-pane" id="ox-auth">
							<h:panelGroup layout="block" style="width:80%;">

								<ox:decorate label="#{msg['organizationForm.serverip']}">
									<h:inputText value="#{_webKeySettings.serverIP}" styleClass="form-control serverIpTextBox"/>
								</ox:decorate>

							</h:panelGroup>
						</div>
					</div>
				</div>
			</div>
		</div>

		<richext:spacer height="16" />
		<ui:insert name="controlButttons" />
	</h:form>
</ui:composition>
