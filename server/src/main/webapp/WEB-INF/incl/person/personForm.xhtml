<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:s="http://jboss.org/schema/seam/taglib"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:a4j="http://richfaces.org/a4j"
                xmlns:rich="http://richfaces.org/rich"
                xmlns:richext="http://java.sun.com/jsf/composite/richext"
		xmlns:ox="http://java.sun.com/jsf/composite/ox"
                xmlns:c="http://java.sun.com/jsp/jstl/core">

    <h:outputStylesheet>
        .attributeColumn {
            width: 350px;
            text-align: left;
            vertical-align: top;
        }

        .formColumn {
            text-align: left;
            vertical-align: top;
        }
        .col-xs-12 {
   			 width: 1100px;
    	}
		.content {
		    min-height: 250px;
		    padding: 15px;
		    margin-right: auto;
		    margin-left: auto;
		    padding-left: 15px;
		    padding-right: 15px;
		    overflow: scroll;
		}
		.rf-ii {
		    display: inline-block !important;
		    white-space: nowrap !important;
		    background-color: white !important;
		    border-bottom-width: 1px !important;
		    border-bottom-style: dotted !important;
		    border-bottom-color: #000000 !important;
		    padding-left: 3px !important;
		    padding-right: 3px !important;
		    display: inline-block !important;
		    position: relative !important;
		    width: 500px !important;
		    height: 31px !important;
		    overflow: hidden;
			text-overflow: ellipsis;
		}
    </h:outputStylesheet>

    <h:outputScript>
        function changeAttributeVisibility(attrId, show) {
            var attr = $('a[id*=' + attrId + ']');
            var currentState = attr.is(":visible");

            if (/* !currentState and */ show) {
                attr.show();
            } else {
                attr.hide();
            }
        }
        
       function changeTextType(element) {
    		var $element = $(element);
    		$element[0].childNodes[2].childNodes[0].setAttribute('type','password');
		}

		function updateSpan(element, value) {
    		var newValue = '';
    		for (i = 0;  i &lt; value.length ; i++)
    			newValue += '&bull;';
    		
    		var $element = $(element);
    		$element[0].childNodes[0].innerHTML = newValue;
		}
		
    </h:outputScript>
    <section class="content-header">
        <h1 style="color: #333;">
            #{msg['person.users']}
            <small><i class="fa fa-caret-right" style="color: #333 !important;"></i>#{msg['person.updateUser']}</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#{request.contextPath}/home"><i class="fa fa-home"></i></a></li>
            <li class="organization/configuration">#{msg['person.addUpdateUser']}</li>
        </ol>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <div class="box box-primary">
                    <div class="box-header">
                    </div>
                    <div style="display: inline-block; width: 100% !important;">
                        <h:form>
                            <input type='hidden' name='cid'
                                   value='#{conversation.id}'/> <!-- Workaround which required by manual tab panel. TODO: Remove after upgrade to SEAM 2.3.1 -->

                            <h:panelGrid columns="3" width="100%" columnClasses="attributeColumn, , formColumn"
                                         border="0" cellpadding="0" cellspacing="0">

                                <h:panelGroup id="tabPanelGroupId">

                                    <rich:tabPanel switchType="client" id="attributeTabPanelId">
                                        <c:forEach items="#{_customAttributeAction.attributeByOrigin.entrySet()}"
                                                   var="origin">
                                            <rich:tab header="#{_customAttributeAction.originDisplayNames[origin.key]}">
                                                <h:panelGrid columns="1" border="0" cellpadding="0" cellspacing="0">
                                                    <h4 style="font-size: 18px;text-decoration: underline;">#{msg['person.addAttributesToPerson']}</h4>
                                                    <c:forEach items="#{origin.value}" var="attr">
                                                        <ui:param name="_aid"
                                                                  value="#{_customAttributeAction.attributeIds[attr]}"/>
                                                        <a4j:commandLink id="#{_aid}" value="#{attr.displayName}"
                                                                         action="#{_customAttributeAction.addCustomAttribute(attr.inum)}"
                                                                         render="selectedCustomAttributesId"
                                                                         oncomplete="changeAttributeVisibility('#{_aid}', false);"
                                                                         style="#{_customAttributeAction.containsCustomAttribute(attr) ? 'display: none;' : ''}"
                                                                         eventsQueue="personQueue">
                                                            <f:param name="sv" value="1"/>
                                                        </a4j:commandLink>
                                                    </c:forEach>
                                                </h:panelGrid>
                                            </rich:tab>
                                        </c:forEach>
                                    </rich:tabPanel>
                                </h:panelGroup>

                                <richext:spacer width="10"/>

                                <h:panelGrid columns="1" width="100%" border="0" cellpadding="0" cellspacing="0">
                                    <h:panelGroup id="selectedCustomAttributesId">

                                        <a4j:repeat value="#{_customAttributeAction.customAttributes}" var="_custAttr"
                                                    rowKeyVar="_custAttrIdx">
                                            <h:panelGroup rendered="#{_custAttr.metadata != null}">
                                                <ui:param name="_mandatory" value="#{_custAttr.mandatory}"/>
                                                <ui:param name="_mustEnter" value="#{_mandatory and _new}"/>
                                                <a4j:repeat value="#{_custAttr.values}" var="_value"
                                                            rowKeyVar="_valueIdx">
                                                    <ui:param name="_aid"
                                                              value="#{_customAttributeAction.attributeIds[_custAttr.metadata]}"/>
                                                    <ox:decorate
                                                                rendered="#{(_custAttr.adminCanEdit or _mustEnter) and (_custAttr.metadata.displayName ne 'Password')}">
                                                        
                                                        <ui:define
                                                                name="label">#{_custAttr.metadata.displayName} #{_valueIdx == 0 ? '' : _valueIdx}</ui:define>

                                                        <div class="col-xs-10">
                                                            <rich:inplaceInput
                                                                    value="#{_custAttr.values[_valueIdx]}"
                                                                    defaultLabel="#{msg['person.clickToEnter']} #{_custAttr.metadata.displayName} #{_valueIdx == 0 ? '' : _valueIdx}"
                                                                    id="custId"
                                                                    validator="#{_custAttr.metadata.validateAttribute}"
                                                                    required="#{_mustEnter and empty param['sv']}"
                                                                    requiredMessage="#{msg['person.pleaseEnter']} #{_custAttr.metadata.displayName} #{_valueIdx == 0 ? '' : _valueIdx}. "
                                                                    rendered="#{(_custAttr.adminCanEdit or _mustEnter) and (_custAttr.metadata.displayName ne 'User Status') and (_custAttr.metadata.displayName ne 'Password')}" >
                                                                <rich:validator event="blur"/>
                                                               	
                                                            </rich:inplaceInput>                                                      

                                                            <h:selectOneMenu styleClass="form-control"
                                                                             value="#{updatePersonAction.gluuStatus}"
                                                                             required="true"
                                                                             id="statusId"
                                                                             rendered="#{(_custAttr.adminCanEdit or _mustEnter) and (_custAttr.metadata.displayName eq 'User Status')}">
                                                                <s:selectItems
                                                                        value="#{updatePersonAction.activeInactiveStatuses}"
                                                                        var="_type" label="#{_type.displayName}"/>
                                                                <!-- <s:convertEnum/> -->
                                                                <f:converter
                                                                        converterId="org.gluu.oxtrust.util.jsf.EnumConverter"/>
                                                            </h:selectOneMenu>
                                                        </div>
                                                        <h:outputText value="&#160;"/>                                                        
                                                        
                                                        <div class="col-xs-2">
                                                            <a4j:commandLink
                                                                    action="#{_customAttributeAction.removeCustomAttribute(_custAttr.metadata.inum)}"
                                                                    render="selectedCustomAttributesId"
                                                                    styleClass="glyphicon glyphicon-remove"
                                                                    style="margin-top:-18px;margin-left:-76px;"
                                                                    onbegin="changeAttributeVisibility('#{_aid}', true);"
                                                                    rendered="#{_custAttr.adminCanEdit and not _mandatory}">
                                                                <!--   <h:graphicImage value="/img/remove.gif" />-->
                                                                <f:param name="sv" value="1"/>
                                                            </a4j:commandLink>
                                                            <a4j:commandLink
                                                            		action="#{_customAttributeAction.addMultiValuesInAttributes(_custAttr.metadata.inum,_mandatory)}"
                                                                    render="selectedCustomAttributesId"
                                                                    styleClass="glyphicon glyphicon-plus"
                                                                    style="margin-top:-18px;margin-right:-76px;margin-left:5px;"
                                                                    rendered="#{_custAttr.adminCanEdit and _custAttr.metadata.oxMultivaluedAttribute.value and _valueIdx == 0}">
                                                                <!--   <h:graphicImage value="/img/remove.gif" />-->
                                                                <f:param name="sv" value="1"/>
                                                            </a4j:commandLink>
                                                            <a4j:commandLink
                                                            		action="#{_customAttributeAction.removeMultiValuesInAttributes(_custAttr.metadata.inum,_mandatory)}"
                                                                    render="selectedCustomAttributesId"
                                                                    styleClass="glyphicon glyphicon-minus"
                                                                    style="margin-top:-18px;margin-left:79px;"
                                                                    rendered="#{_custAttr.adminCanEdit and _custAttr.metadata.oxMultivaluedAttribute.value and _valueIdx == 0 }">
                                                                <!--   <h:graphicImage value="/img/remove.gif" />-->
                                                                <f:param name="sv" value="1"/>
                                                            </a4j:commandLink>
                                                            </div>
                                                    </ox:decorate>

                                                    <ox:decorate
                                                                rendered="#{not (_custAttr.adminCanEdit or _mustEnter)}" label="
                                                            <h:panelGroup>
                                                                <h:outputText
                                                                        value="#{_custAttr.metadata.displayName}"/>
                                                                <!-- <h:outputText value="Undefined attribute" rendered="#{_custAttr.metadata == null}"/> -->
                                                            </h:panelGroup>
                                                        </ui:define>
                                                        <h:outputText style="margin-left:19px;"
                                                                      value="#{_custAttr.values[_valueIdx]}"
                                                                      rendered="#{not (_custAttr.adminCanEdit or _mustEnter) and (_custAttr.metadata.displayName ne 'memberOf')}"/>
                                                        <h:outputText style="margin-left:19px;"
                                                                      value="#{updatePersonAction.getGroupName(_custAttr.values[_valueIdx])}"
                                                                      rendered="#{not (_custAttr.adminCanEdit or _mustEnter) and (_custAttr.metadata.displayName eq 'memberOf')}"/>
                                                        <h:outputText value="&#160;"/>
                                                        <a4j:commandLink
                                                                action="#{_customAttributeAction.removeCustomAttribute(_custAttr.metadata.inum)}"
                                                                render="selectedCustomAttributesId"
                                                                onbegin="changeAttributeVisibility('#{_aid}', true);"
                                                                rendered="#{_custAttr.adminCanEdit and not _mandatory}">
                                                            <h:graphicImage value="/img/remove.gif"/>
                                                            <f:param name="sv" value="1"/>
                                                        </a4j:commandLink>
                                                        </ox:decorate>
                                                        
                                                        
                                                        <ox:decorate  rendered="#{(_custAttr.adminCanEdit or _mustEnter) and (_custAttr.metadata.displayName eq 'Password')}">
                                                        <ui:define
                                                                name="label">#{msg['person.password']}</ui:define>
														<div class="col-xs-10">                                                                                           
                                                            
                                                            <rich:inplaceInput
                                                                    id="custpasswordId"
                                                                    validator="#{updatePersonAction.validateConfirmPassword}"
                                                                    required="#{_mustEnter and empty param['sv']}"
                                                                    requiredMessage="#{msg['person.pleaseEnter']} #{_custAttr.metadata.displayName}. "
                                                                    rendered="#{(_custAttr.adminCanEdit or _mustEnter) and (_custAttr.metadata.displayName eq 'Password')}" 
                                                                    onfocus="changeTextType(this);">
                                                                <rich:validator event="blur" oncomplete="updateSpan(this, #{rich:component('custpasswordId')}.getValue())"/>
                                                            </rich:inplaceInput>                                                             
                                                        </div>
                                                     </ox:decorate>               
                                                        
                                                        <ox:decorate  rendered="#{(_custAttr.adminCanEdit or _mustEnter) and (_custAttr.metadata.displayName eq 'Password')}">
                                                        <ui:define
                                                                name="label">#{msg['person.confirmPassword']}</ui:define>
														<div class="col-xs-10">                                                                                           
                                                            <rich:inplaceInput       
                                                                    defaultLabel="#{msg['person.confirmPassword']}"
                                                                    maxlength="50" id="custconfirmpasswordId"
                                                                    validator="#{updatePersonAction.validateConfirmPassword}"
                                                                    required="#{_mustEnter and empty param['sv']}"
                                                                    requiredMessage="Please enter Confirm Password" 
                                                                    rendered="#{(_custAttr.adminCanEdit or _mustEnter) and (_custAttr.metadata.displayName eq 'Password')}"
                                                                    onfocus="changeTextType(this);">
                                                                <rich:validator event="blur" oncomplete="updateSpan(this, #{rich:component('custconfirmpasswordId')}.getValue())"/>
                                                            </rich:inplaceInput>                                                             
                                                        </div>
                                                     </ox:decorate>                                                        
                                                  
                                                </a4j:repeat>
                                            </h:panelGroup>
                                        </a4j:repeat>
                                    </h:panelGroup>
                                </h:panelGrid>
                            </h:panelGrid>

                            <richext:spacer height="16"/>

                            <ui:insert name="controlButtons"/>
                        </h:form>
                    </div>
                </div>
            </div>
        </div>
    </section>
</ui:composition>
